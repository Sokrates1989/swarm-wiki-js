networks:
  wiki_js_backend:
    driver: overlay
  traefik:
    external: true


services:
  db:
    image: postgres:16
    volumes:
      - ${DATA_ROOT}/db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${WIKIJS_DB_NAME}
      POSTGRES_USER: ${WIKIJS_DB_USER}
      POSTGRES_PASSWORD: ${WIKIJS_DB_PASSWORD}
    networks:
      - wiki_js_backend

  wiki:
    image: ghcr.io/requarks/wiki:2
    environment:
      DB_TYPE: ${WIKIJS_DB_TYPE}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${WIKIJS_DB_NAME}
      DB_USER: ${WIKIJS_DB_USER}
      DB_PASS: ${WIKIJS_DB_PASSWORD}
    networks:
      - wiki_js_backend
      - traefik
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik
        - traefik.http.routers.${STACK_NAME}_wiki.rule=Host(`${WIKIJS_HOSTNAME}`)
        - traefik.http.routers.${STACK_NAME}_wiki.entrypoints=http,web
        - traefik.http.routers.${STACK_NAME}_wiki-secure.rule=Host(`${WIKIJS_HOSTNAME}`)
        - traefik.http.routers.${STACK_NAME}_wiki-secure.entrypoints=https
        - traefik.http.routers.${STACK_NAME}_wiki-secure.tls=true
        - traefik.http.routers.${STACK_NAME}_wiki-secure.tls.certresolver=le
        - traefik.http.services.${STACK_NAME}_wiki.loadbalancer.server.port=3000
        # Middleware for HTTP to HTTPS redirection
        - traefik.http.middlewares.${STACK_NAME}_https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.${STACK_NAME}_https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.${STACK_NAME}_wiki.middlewares=${STACK_NAME}_https-redirect
        # www-redir
        - traefik.http.middlewares.${STACK_NAME}_www-redir.redirectregex.regex=^https://www.(.*)
        - traefik.http.middlewares.${STACK_NAME}_www-redir.redirectregex.replacement=https://$${1}
        - traefik.http.middlewares.${STACK_NAME}_www-redir.redirectregex.permanent=true
